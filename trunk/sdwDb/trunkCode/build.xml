<project name="pms-db" basedir="." default="1.about">
    <property file="${basedir}/build.properties"/>
    <property name="target.dir" value="${basedir}"/>
    <property name="lib.dir" value="${basedir}/${lib.dir}"/>

    <condition property="is.test">
        <and>
            <isset property="is.prod.env"/>
            <equals arg1="${is.prod.env}" arg2="false"/>
        </and>
    </condition>

    <tstamp>
        <format property="date.stamp" pattern="yyyy/MM/dd hh:mm:ss"/>
    </tstamp>

    <path id="classpath">
        <fileset dir="${lib.dir}" casesensitive="false"/>
    </path>

    <taskdef resource="liquibasetasks.properties">
        <classpath refid="classpath"/>
    </taskdef>


    <!--target标签中放置的是一个或多个任务的集合  即要做哪些事情-->


    <target name="1.about" description="Show the project help info.">
        <echo message="${date.stamp}"/>
        <echo message="This is ${app.name} dbmigration."/>
        <echo message="For postgres: 1.creat db, 2.creat-role/user, 3.create schema(ower-role)."/>
        <echo message="Database infos: "/>
        <echo message="jdbc.driver=${jdbc.driver}"/>
        <echo message="jdbc.url=${jdbc.url}"/>
        <echo message="dbName=${dbName}"/>
        <echo message="username=${username}"/>
        <echo message="password=${password}"/>
        <echo message="sleep 5 second for check username password jdbc.url................"/>
        <sleep seconds="5"/>
    </target>

    <!--数据库初始化-->
    <target name="2.init.db" depends="1.about" description="Init db.">
        <fail unless="is.test"
              message="ERROR! ${line.separator}WARM: This is product environment, mustn't do this target!!!!"/>
        <property name="dbName" value="${dbName}"/>
        <sql driver="${jdbc.driver}" url="${jdbc.url}" userid="${username}" password="${password}"
             classpathref="classpath" encoding="UTF-8">
            <!--fileset类型定义了一组文件 dir为文件路径-->
            <fileset dir="${target.dir}/prod.data/init.db" casesensitive="false">
                <!--include 包含的-->
                <include name="clean_liquibase_log_tables.sql"/>
            </fileset>
        </sql>
    </target>


    <!--depends属性指定了target的执行顺序-->
    <target name="3.rebuild.schema" depends="2.init.db" description="Rebuild schema">
        <!--rel1-->
        <migrateDb script.dir="${target.dir}/prod.data/sdw/base" dropfirst="false"/>
        <migrateDb script.dir="${target.dir}/prod.data/sdw/version-0" dropfirst="false"/>
        <migrateDb script.dir="${target.dir}/test.data/sdw" dropfirst="false"/>
    </target>

    <target name="4.refresh.test.data" depends="3.rebuild.schema" description="Rebuild schema and refresh test data.">
        <echo message="add test data ...."/>

        <migrateDb script.dir="${target.dir}/test.data/sdw" dropfirst="false"/>
    </target>

    <!--数据库更新-->
    <target name="5.upgrade.db" depends="1.about" description="Update database.">
        <echo message="upgrade database."/>
        <!--rel2-->
        <!--指定更新的数据库表 即指定放有数据表xml的文件路径-->
        <migrateDb script.dir="${target.dir}/prod.data/sdw/base" dropfirst="false"/>
        <migrateDb script.dir="${target.dir}/prod.data/sdw/version-0" dropfirst="false"/>
        <migrateDb script.dir="${target.dir}/test.data/sdw" dropfirst="false"/>
    </target>

    <macrodef name="migrateDb">
        <attribute name="script.dir"/>
        <!-- dropFirst do not work with schema -->
        <attribute name="dropFirst" default="false"/>
        <sequential>
            <echo message="Execute script: @{script.dir}"/>
            <updateDatabase defaultSchemaName="${dbName}" changeLogFile="@{script.dir}/script_suite.xml"
                            driver="${jdbc.driver}" url="${jdbc.url}" username="${username}" password="${password}"
                            dropFirst="@{dropFirst}" promptOnNonLocalDatabase="${prompt.user.if.not.local.database}"
                            classpathref="classpath">
                <changelogproperty name="target.dir" value="${target.dir}"/>
            </updateDatabase>
        </sequential>
    </macrodef>
</project>
