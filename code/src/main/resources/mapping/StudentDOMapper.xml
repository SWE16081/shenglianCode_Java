<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.youjiao.demo.dao.StudentDOMapper">
  <resultMap id="BaseResultMap" type="com.youjiao.demo.dataobject.StudentDO">
    <id column="student_id" jdbcType="INTEGER" property="studentId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="sex" jdbcType="BIT" property="sex" />
    <result column="id_number" jdbcType="CHAR" property="idNumber" />
    <result column="start_grade" jdbcType="TINYINT" property="startGrade" />
    <result column="school_id" jdbcType="INTEGER" property="schoolId" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="alive" jdbcType="BIT" property="alive" />
    <result column="class_id" jdbcType="INTEGER" property="classId" />
  </resultMap>
  <sql id="Base_Column_List">
    student_id, name, birthday, sex, id_number, start_grade, school_id, parent_id, alive, 
    class_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student
    where student_id = #{studentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from student
    where student_id = #{studentId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.youjiao.demo.dataobject.StudentDO">
    insert into student (student_id, name, birthday, 
      sex, id_number, start_grade, 
      school_id, parent_id, alive, 
      class_id)
    values (#{studentId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{birthday,jdbcType=DATE}, 
      #{sex,jdbcType=BIT}, #{idNumber,jdbcType=CHAR}, #{startGrade,jdbcType=TINYINT}, 
      #{schoolId,jdbcType=INTEGER}, #{parentId,jdbcType=INTEGER}, #{alive,jdbcType=BIT}, 
      #{classId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.youjiao.demo.dataobject.StudentDO">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="studentId != null">
        student_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="idNumber != null">
        id_number,
      </if>
      <if test="startGrade != null">
        start_grade,
      </if>
      <if test="schoolId != null">
        school_id,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="alive != null">
        alive,
      </if>
      <if test="classId != null">
        class_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="studentId != null">
        #{studentId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=BIT},
      </if>
      <if test="idNumber != null">
        #{idNumber,jdbcType=CHAR},
      </if>
      <if test="startGrade != null">
        #{startGrade,jdbcType=TINYINT},
      </if>
      <if test="schoolId != null">
        #{schoolId,jdbcType=INTEGER},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="alive != null">
        #{alive,jdbcType=BIT},
      </if>
      <if test="classId != null">
        #{classId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.youjiao.demo.dataobject.StudentDO">
    update student
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=BIT},
      </if>
      <if test="idNumber != null">
        id_number = #{idNumber,jdbcType=CHAR},
      </if>
      <if test="startGrade != null">
        start_grade = #{startGrade,jdbcType=TINYINT},
      </if>
      <if test="schoolId != null">
        school_id = #{schoolId,jdbcType=INTEGER},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="alive != null">
        alive = #{alive,jdbcType=BIT},
      </if>
      <if test="classId != null">
        class_id = #{classId,jdbcType=INTEGER},
      </if>
    </set>
    where student_id = #{studentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.youjiao.demo.dataobject.StudentDO">
    update student
    set name = #{name,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=DATE},
      sex = #{sex,jdbcType=BIT},
      id_number = #{idNumber,jdbcType=CHAR},
      start_grade = #{startGrade,jdbcType=TINYINT},
      school_id = #{schoolId,jdbcType=INTEGER},
      parent_id = #{parentId,jdbcType=INTEGER},
      alive = #{alive,jdbcType=BIT},
      class_id = #{classId,jdbcType=INTEGER}
    where student_id = #{studentId,jdbcType=INTEGER}
  </update>
  <!--添加班级孩子-->
  <update id="updateStudentListByStudentId" parameterType="java.util.List">
    update student
    set class_id = #{classId,jdbcType=INTEGER}
    where student_id in
    <foreach collection="studentList" item="item" open="(" close=")" separator=",">
      #{item,jdbcType=INTEGER}
    </foreach>
    and alive=true
  </update>
  <!--修改班级时删除班级孩子-->
  <update id="updateClassIdByStudentId" parameterType="java.util.List">
    update student
    set class_id = null
    where student_id in
    <foreach collection="list" item="item" open="(" close=")" separator=",">
      #{item,jdbcType=INTEGER}
    </foreach>
    and alive=true
  </update>
</mapper>