<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.youjiao.demo.dao.StudentTransactionRecordDOMapper">
  <resultMap id="BaseResultMap" type="com.youjiao.demo.dataobject.StudentTransactionRecordDO">
    <id column="record_id" jdbcType="INTEGER" property="recordId" />
    <result column="pay_time" jdbcType="DATE" property="payTime" />
    <result column="is_new" jdbcType="BIT" property="isNew" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="protocol_type" jdbcType="TINYINT" property="protocolType" />
    <result column="protocol_id" jdbcType="VARCHAR" property="protocolId" />
    <result column="receipt_id" jdbcType="VARCHAR" property="receiptId" />
    <result column="service" jdbcType="VARCHAR" property="service" />
    <result column="payment" jdbcType="INTEGER" property="payment" />
    <result column="start_time" jdbcType="DATE" property="startTime" />
    <result column="deadline" jdbcType="DATE" property="deadline" />
    <result column="payment_type" jdbcType="TINYINT" property="paymentType" />
    <result column="capitation_receivable" jdbcType="DOUBLE" property="capitationReceivable" />
    <result column="month_fee" jdbcType="DOUBLE" property="monthFee" />
    <result column="month_receive" jdbcType="TINYINT" property="monthReceive" />
    <result column="payment_mode" jdbcType="TINYINT" property="paymentMode" />
    <result column="sale" jdbcType="VARCHAR" property="sale" />
    <result column="receivable_per_month" jdbcType="DOUBLE" property="receivablePerMonth" />
    <result column="received_per_month" jdbcType="DOUBLE" property="receivedPerMonth" />
    <result column="receivable_month" jdbcType="DOUBLE" property="receivableMonth" />
    <result column="received_month" jdbcType="DOUBLE" property="receivedMonth" />
    <result column="school_id" jdbcType="INTEGER" property="schoolId" />
    <result column="student_id" jdbcType="INTEGER" property="studentId" />
  </resultMap>
  <sql id="Base_Column_List">
    record_id, pay_time, is_new, remark, protocol_type, protocol_id, receipt_id, service, 
    payment, start_time, deadline, payment_type, capitation_receivable, month_fee, month_receive, 
    payment_mode, sale, receivable_per_month, received_per_month, receivable_month, received_month, 
    school_id, student_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student_transaction_record
    where record_id = #{recordId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from student_transaction_record
    where record_id = #{recordId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.youjiao.demo.dataobject.StudentTransactionRecordDO">
    insert into student_transaction_record (record_id, pay_time, is_new, 
      remark, protocol_type, protocol_id, 
      receipt_id, service, payment, 
      start_time, deadline, payment_type, 
      capitation_receivable, month_fee, month_receive, 
      payment_mode, sale, receivable_per_month, 
      received_per_month, receivable_month, received_month, 
      school_id, student_id)
    values (#{recordId,jdbcType=INTEGER}, #{payTime,jdbcType=DATE}, #{isNew,jdbcType=BIT}, 
      #{remark,jdbcType=VARCHAR}, #{protocolType,jdbcType=TINYINT}, #{protocolId,jdbcType=VARCHAR}, 
      #{receiptId,jdbcType=VARCHAR}, #{service,jdbcType=VARCHAR}, #{payment,jdbcType=INTEGER}, 
      #{startTime,jdbcType=DATE}, #{deadline,jdbcType=DATE}, #{paymentType,jdbcType=TINYINT},
      #{capitationReceivable,jdbcType=DOUBLE}, #{monthFee,jdbcType=DOUBLE}, #{monthReceive,jdbcType=TINYINT}, 
      #{paymentMode,jdbcType=TINYINT}, #{sale,jdbcType=VARCHAR}, #{receivablePerMonth,jdbcType=DOUBLE}, 
      #{receivedPerMonth,jdbcType=DOUBLE}, #{receivableMonth,jdbcType=DOUBLE}, #{receivedMonth,jdbcType=DOUBLE}, 
      #{schoolId,jdbcType=INTEGER}, #{studentId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.youjiao.demo.dataobject.StudentTransactionRecordDO">
    insert into student_transaction_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="recordId != null">
        record_id,
      </if>
      <if test="payTime != null">
        pay_time,
      </if>
      <if test="isNew != null">
        is_new,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="protocolType != null">
        protocol_type,
      </if>
      <if test="protocolId != null">
        protocol_id,
      </if>
      <if test="receiptId != null">
        receipt_id,
      </if>
      <if test="service != null">
        service,
      </if>
      <if test="payment != null">
        payment,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="deadline != null">
        deadline,
      </if>
      <if test="paymentType != null">
        payment_type,
      </if>
      <if test="capitationReceivable != null">
        capitation_receivable,
      </if>
      <if test="monthFee != null">
        month_fee,
      </if>
      <if test="monthReceive != null">
        month_receive,
      </if>
      <if test="paymentMode != null">
        payment_mode,
      </if>
      <if test="sale != null">
        sale,
      </if>
      <if test="receivablePerMonth != null">
        receivable_per_month,
      </if>
      <if test="receivedPerMonth != null">
        received_per_month,
      </if>
      <if test="receivableMonth != null">
        receivable_month,
      </if>
      <if test="receivedMonth != null">
        received_month,
      </if>
      <if test="schoolId != null">
        school_id,
      </if>
      <if test="studentId != null">
        student_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="recordId != null">
        #{recordId,jdbcType=INTEGER},
      </if>
      <if test="payTime != null">
        #{payTime,jdbcType=DATE},
      </if>
      <if test="isNew != null">
        #{isNew,jdbcType=BIT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="protocolType != null">
        #{protocolType,jdbcType=TINYINT},
      </if>
      <if test="protocolId != null">
        #{protocolId,jdbcType=VARCHAR},
      </if>
      <if test="receiptId != null">
        #{receiptId,jdbcType=VARCHAR},
      </if>
      <if test="service != null">
        #{service,jdbcType=VARCHAR},
      </if>
      <if test="payment != null">
        #{payment,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=DATE},
      </if>
      <if test="deadline != null">
        #{deadline,jdbcType=DATE},
      </if>
      <if test="paymentType != null">
        #{paymentType,jdbcType=VARCHAR},
      </if>
      <if test="capitationReceivable != null">
        #{capitationReceivable,jdbcType=DOUBLE},
      </if>
      <if test="monthFee != null">
        #{monthFee,jdbcType=DOUBLE},
      </if>
      <if test="monthReceive != null">
        #{monthReceive,jdbcType=TINYINT},
      </if>
      <if test="paymentMode != null">
        #{paymentMode,jdbcType=TINYINT},
      </if>
      <if test="sale != null">
        #{sale,jdbcType=VARCHAR},
      </if>
      <if test="receivablePerMonth != null">
        #{receivablePerMonth,jdbcType=DOUBLE},
      </if>
      <if test="receivedPerMonth != null">
        #{receivedPerMonth,jdbcType=DOUBLE},
      </if>
      <if test="receivableMonth != null">
        #{receivableMonth,jdbcType=DOUBLE},
      </if>
      <if test="receivedMonth != null">
        #{receivedMonth,jdbcType=DOUBLE},
      </if>
      <if test="schoolId != null">
        #{schoolId,jdbcType=INTEGER},
      </if>
      <if test="studentId != null">
        #{studentId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.youjiao.demo.dataobject.StudentTransactionRecordDO">
    update student_transaction_record
    <set>
      <if test="payTime != null">
        pay_time = #{payTime,jdbcType=DATE},
      </if>
      <if test="isNew != null">
        is_new = #{isNew,jdbcType=BIT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="protocolType != null">
        protocol_type = #{protocolType,jdbcType=TINYINT},
      </if>
      <if test="protocolId != null">
        protocol_id = #{protocolId,jdbcType=VARCHAR},
      </if>
      <if test="receiptId != null">
        receipt_id = #{receiptId,jdbcType=VARCHAR},
      </if>
      <if test="service != null">
        service = #{service,jdbcType=VARCHAR},
      </if>
      <if test="payment != null">
        payment = #{payment,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=DATE},
      </if>
      <if test="deadline != null">
        deadline = #{deadline,jdbcType=DATE},
      </if>
      <if test="paymentType != null">
        payment_type = #{paymentType,jdbcType=TINYINT},
      </if>
      <if test="capitationReceivable != null">
        capitation_receivable = #{capitationReceivable,jdbcType=DOUBLE},
      </if>
      <if test="monthFee != null">
        month_fee = #{monthFee,jdbcType=DOUBLE},
      </if>
      <if test="monthReceive != null">
        month_receive = #{monthReceive,jdbcType=TINYINT},
      </if>
      <if test="paymentMode != null">
        payment_mode = #{paymentMode,jdbcType=TINYINT},
      </if>
      <if test="sale != null">
        sale = #{sale,jdbcType=VARCHAR},
      </if>
      <if test="receivablePerMonth != null">
        receivable_per_month = #{receivablePerMonth,jdbcType=DOUBLE},
      </if>
      <if test="receivedPerMonth != null">
        received_per_month = #{receivedPerMonth,jdbcType=DOUBLE},
      </if>
      <if test="receivableMonth != null">
        receivable_month = #{receivableMonth,jdbcType=DOUBLE},
      </if>
      <if test="receivedMonth != null">
        received_month = #{receivedMonth,jdbcType=DOUBLE},
      </if>
      <if test="schoolId != null">
        school_id = #{schoolId,jdbcType=INTEGER},
      </if>
      <if test="studentId != null">
        student_id = #{studentId,jdbcType=INTEGER},
      </if>
    </set>
    where record_id = #{recordId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.youjiao.demo.dataobject.StudentTransactionRecordDO">
    update student_transaction_record
    set pay_time = #{payTime,jdbcType=DATE},
      is_new = #{isNew,jdbcType=BIT},
      remark = #{remark,jdbcType=VARCHAR},
      protocol_type = #{protocolType,jdbcType=TINYINT},
      protocol_id = #{protocolId,jdbcType=VARCHAR},
      receipt_id = #{receiptId,jdbcType=VARCHAR},
      service = #{service,jdbcType=VARCHAR},
      payment = #{payment,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=DATE},
      deadline = #{deadline,jdbcType=DATE},
      payment_type = #{paymentType,jdbcType=TINYINT},
      capitation_receivable = #{capitationReceivable,jdbcType=DOUBLE},
      month_fee = #{monthFee,jdbcType=DOUBLE},
      month_receive = #{monthReceive,jdbcType=TINYINT},
      payment_mode = #{paymentMode,jdbcType=TINYINT},
      sale = #{sale,jdbcType=VARCHAR},
      receivable_per_month = #{receivablePerMonth,jdbcType=DOUBLE},
      received_per_month = #{receivedPerMonth,jdbcType=DOUBLE},
      receivable_month = #{receivableMonth,jdbcType=DOUBLE},
      received_month = #{receivedMonth,jdbcType=DOUBLE},
      school_id = #{schoolId,jdbcType=INTEGER},
      student_id = #{studentId,jdbcType=INTEGER}
    where record_id = #{recordId,jdbcType=INTEGER}
  </update>

    <!--批量选择-->
    <select id="selectTransactionRecordList" parameterType="java.util.List" resultMap="BaseResultMap">
        select * from student_transaction_record
        where (start_time between #{startTime} and #{deadline} or deadline between #{startTime} and #{deadline}) and
        student_id in
        <foreach item="id" collection="studentIdList" open="(" close=")" separator=",">
            #{id}
        </foreach>
      order by deadline
    </select>

  <!--批量选择（不筛选时间）-->
  <select id="selectAllTransactionRecordList" parameterType="java.util.List" resultMap="BaseResultMap">
    select * from student_transaction_record
    where student_id in
    <foreach item="id" collection="studentIdList" open="(" close=")" separator=",">
      #{id}
    </foreach>
    order by deadline
  </select>
    <!--批量删除-->
    <delete id="deleteStudentTransactionRecordList" parameterType="java.util.List">
        delete from student_transaction_record
        where record_id in
        <foreach item="id" collection="list" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>

</mapper>